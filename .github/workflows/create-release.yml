on:
  workflow_dispatch:

jobs:
  build-sign-notarize-release:
    name: build, sign, and notarize apps using cmake/Xcode for macOS 10.15, then create release
    runs-on: macOS-latest
    steps:
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      - name: install osfclient
        run: pip3 install osfclient
      - uses: actions/checkout@v2
      - name: download resources
        run: |
          osf -p r6ceh fetch osfstorage/av-speech-in-noise-resources.zip
          unzip av-speech-in-noise-resources.zip
      - name: generate build system
        env:
          AV_SPEECH_IN_NOISE_RESOURCE_PATH: ${{ github.workspace }}/av-speech-in-noise-resources
        run: cmake -S . -B build -G Xcode "-DCMAKE_OSX_ARCHITECTURES=x86_64;arm64" "-DAV_SPEECH_IN_NOISE_MACOS_RESOURCES:STRING=$AV_SPEECH_IN_NOISE_RESOURCE_PATH/b.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/c.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/s.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/t.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/d.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/p.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/v.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/h.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/n.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/z.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/k.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/m.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/btnrh.png;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/mlst-c.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/ClearMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/ClearMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/CommunicatorMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/CommunicatorMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/FabricMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/FabricMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/HospitalMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/HospitalMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_VO.txt" "-DAV_SPEECH_IN_NOISE_MACOS_OTHER_CODE_SIGN_FLAGS:STRING=--timestamp --options=runtime" "-DAV_SPEECH_IN_NOISE_MACOS_CODE_SIGN_IDENTITY:STRING=${{ secrets.CODE_SIGN_IDENTITY }}" -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15
      - name: build app -- Release
        run: cmake --build build --target av-speech-in-noise-bundle --config Release
      - name: build facemask study -- Release
        run: cmake --build build --target av-speech-in-noise-facemask-study --config Release
      - name: notarize apps
        run: |
          ditto -c -k --keepParent "./build/macos/Release/AV Speech in Noise.app" "./build/macos/Release/AV Speech in Noise.app.zip"
          xcrun altool --notarize-app --primary-bundle-id org.boystown.av-speech-in-noise --username ${{ secrets.APP_CONNECT_NOTARIZATION_USERNAME }} --password ${{ secrets.APP_CONNECT_NOTARIZATION_PASSWORD }} --file "./build/macos/Release/AV Speech in Noise.app.zip"
          ditto -c -k --keepParent "./build/macos/Release/Facemask Study.app" "./build/macos/Release/Facemask Study.app.zip"
          xcrun altool --notarize-app --primary-bundle-id org.boystown.av-speech-in-noise-facemask-study --username ${{ secrets.APP_CONNECT_NOTARIZATION_USERNAME }} --password ${{ secrets.APP_CONNECT_NOTARIZATION_PASSWORD }} --file "./build/macos/Release/Facemask Study.app.zip"
