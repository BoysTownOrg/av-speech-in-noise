on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  build-sign-notarize-release:
    name: build, sign, and notarize apps using cmake/Xcode for macOS 10.15, then create release
    runs-on: macos-latest
    steps:
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      - uses: actions/checkout@v4
      - name: download resources
        env:
          OSF_TOKEN: ${{ secrets.OSF_ACCESS_TOKEN }}
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install osfclient
          osf -p r6ceh fetch osfstorage/av-speech-in-noise-resources.zip
          unzip av-speech-in-noise-resources.zip
      - name: generate build systems
        env:
          AV_SPEECH_IN_NOISE_RESOURCE_PATH: ${{ github.workspace }}/av-speech-in-noise-resources
        run: |
          cmake -S . -B build -G Xcode -DCMAKE_Swift_LANGUAGE_VERSION=5 "-DCMAKE_OSX_ARCHITECTURES=x86_64;arm64" "-DAV_SPEECH_IN_NOISE_MACOS_RESOURCES:STRING=$AV_SPEECH_IN_NOISE_RESOURCE_PATH/b.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/c.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/d.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/h.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/k.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/m.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/n.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/p.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/s.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/t.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/v.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/z.bmp;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/mlst-c.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/ClearMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/ClearMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/CommunicatorMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/CommunicatorMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/FabricMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/FabricMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/HospitalMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/HospitalMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_VO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/Media.xcassets" "-DAV_SPEECH_IN_NOISE_MACOS_OTHER_CODE_SIGN_FLAGS:STRING=--timestamp --options=runtime" "-DAV_SPEECH_IN_NOISE_MACOS_CODE_SIGN_IDENTITY:STRING=${{ secrets.CODE_SIGN_IDENTITY }}" -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 "-DAV_SPEECH_IN_NOISE_VERSION=${{ github.ref_name }}"
      - name: build application bundles
        run: |
          cmake --build build --target av-speech-in-noise-macos-bundle --config Release
          cmake --build build --target av-speech-in-noise-facemask-study-macos-bundle --config Release
      - name: notarize apps
        env:
          AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY: ./build/macos/Release
          APP_CONNECT_NOTARIZATION_USERNAME: ${{ secrets.APP_CONNECT_NOTARIZATION_USERNAME }}
          APP_CONNECT_NOTARIZATION_PASSWORD: ${{ secrets.APP_CONNECT_NOTARIZATION_PASSWORD  }}
          TEAM_IDENTITY: ${{ secrets.TEAM_IDENTITY  }}
        run: |
          ./notarize-and-staple.sh "$AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY/AV Speech in Noise.app" "$AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY/AV Speech in Noise.app.zip"
          ./notarize-and-staple.sh "$AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY/Facemask Study.app" "$AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY/Facemask Study.app.zip"
      - name: create GitHub release
        run: gh release create "${{ github.ref_name }}" ./build/macos/Release/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
