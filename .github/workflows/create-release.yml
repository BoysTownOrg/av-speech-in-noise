on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  build-sign-notarize-release:
    name: build, sign, and notarize apps using cmake/Xcode for macOS 10.15, then create release
    runs-on: macos-latest
    steps:
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      - name: install osfclient
        run: pip3 install osfclient
      - uses: actions/checkout@v2
      - name: download resources
        env:
          OSF_TOKEN: ${{ secrets.OSF_ACCESS_TOKEN }}
        run: |
          OSF_BINARY=$(find ~/Library/Python/ -name osf)
          ${OSF_BINARY} -p r6ceh fetch osfstorage/av-speech-in-noise-resources.zip
          unzip av-speech-in-noise-resources.zip
          ${OSF_BINARY} -p nxq4v fetch osfstorage/tobii_research.zip
          unzip tobii_research.zip
          mkdir /usr/local/include/tobii_research
          mkdir /usr/local/lib/tobii_research
          cp tobii_research/*.h /usr/local/include/tobii_research/
          cp tobii_research/*.dylib /usr/local/lib/tobii_research/
          cp tobii_research/*.pc /usr/local/lib/pkgconfig/
      - name: determine application version
        run: echo "AV_SPEECH_IN_NOISE_VERSION=$(echo ${{ github.ref }} | cut -c 12-)" >> $GITHUB_ENV
      - name: generate build systems
        env:
          AV_SPEECH_IN_NOISE_RESOURCE_PATH: ${{ github.workspace }}/av-speech-in-noise-resources
        run: |
          cmake -S . -B build -G Xcode -DCMAKE_Swift_LANGUAGE_VERSION=5 "-DCMAKE_OSX_ARCHITECTURES=x86_64;arm64" "-DAV_SPEECH_IN_NOISE_MACOS_RESOURCES:STRING=$AV_SPEECH_IN_NOISE_RESOURCE_PATH/mlst-c.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/ClearMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/ClearMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/CommunicatorMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/CommunicatorMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/FabricMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/FabricMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/HospitalMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/HospitalMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_VO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/Media.xcassets" "-DAV_SPEECH_IN_NOISE_MACOS_OTHER_CODE_SIGN_FLAGS:STRING=--timestamp --options=runtime" "-DAV_SPEECH_IN_NOISE_MACOS_CODE_SIGN_IDENTITY:STRING=${{ secrets.CODE_SIGN_IDENTITY }}" -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 -DAV_SPEECH_IN_NOISE_VERSION=$AV_SPEECH_IN_NOISE_VERSION
          cmake -S . -B build-with-eyetracking -G Xcode -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_Swift_LANGUAGE_VERSION=5 "-DAV_SPEECH_IN_NOISE_MACOS_RESOURCES=$AV_SPEECH_IN_NOISE_RESOURCE_PATH/mlst-c.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/ClearMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/ClearMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/CommunicatorMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/CommunicatorMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/FabricMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/FabricMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/HospitalMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/HospitalMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_AO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_AV.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/NoMask_VO.txt;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/Media.xcassets;$AV_SPEECH_IN_NOISE_RESOURCE_PATH/Tobii.xcassets" "-DAV_SPEECH_IN_NOISE_MACOS_OTHER_CODE_SIGN_FLAGS=--timestamp --options=runtime" "-DAV_SPEECH_IN_NOISE_MACOS_CODE_SIGN_IDENTITY=${{ secrets.CODE_SIGN_IDENTITY }}" -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 -DAV_SPEECH_IN_NOISE_VERSION="$AV_SPEECH_IN_NOISE_VERSION" -DAV_SPEECH_IN_NOISE_ENABLE_TOBII_EYETRACKING=1 -DCMAKE_PREFIX_PATH=/usr/local
      - name: build application bundles
        run: |
          cmake --build build --target av-speech-in-noise-macos-bundle --config Release
          cmake --build build --target av-speech-in-noise-facemask-study-macos-bundle --config Release
          cmake --build build-with-eyetracking --target av-speech-in-noise-with-tobii-macos-bundle --config Release
      - name: prepare eyetracking bundle
        run: |
          mkdir "./build-with-eyetracking/macos/Release/AV Speech in Noise.app/Contents/Frameworks"
          cp /usr/local/lib/tobii_research/libtobii_research.dylib "./build-with-eyetracking/macos/Release/AV Speech in Noise.app/Contents/Frameworks"
          install_name_tool -change @rpath/libtobii_research.dylib @executable_path/../Frameworks/libtobii_research.dylib "./build-with-eyetracking/macos/Release/AV Speech in Noise.app/Contents/MacOS/AV Speech in Noise"
          cp /usr/local/lib/tobii_research/libtobii_research_addons.dylib "./build-with-eyetracking/macos/Release/AV Speech in Noise.app/Contents/Frameworks"
          install_name_tool -change @rpath/libtobii_research_addons.dylib @executable_path/../Frameworks/libtobii_research_addons.dylib "./build-with-eyetracking/macos/Release/AV Speech in Noise.app/Contents/MacOS/AV Speech in Noise"
          codesign --force --deep --sign "${{ secrets.CODE_SIGN_IDENTITY }}" --timestamp --options=runtime "./build-with-eyetracking/macos/Release/AV Speech in Noise.app"
      - name: notarize apps
        env:
          AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY: ./build/macos/Release
        run: |
          ditto -c -k --keepParent "$AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY/AV Speech in Noise.app" "$AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY/AV Speech in Noise.app.zip"
          xcrun notarytool submit "$AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY/AV Speech in Noise.app.zip" --apple-id ${{ secrets.APP_CONNECT_NOTARIZATION_USERNAME }} --password ${{ secrets.APP_CONNECT_NOTARIZATION_PASSWORD }} --team-id ${{ secrets.TEAM_IDENTITY }} --wait
          ditto -c -k --keepParent "$AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY/Facemask Study.app" "$AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY/Facemask Study.app.zip"
          xcrun notarytool submit "$AV_SPEECH_IN_NOISE_BUNDLE_DIRECTORY/Facemask Study.app.zip" --apple-id ${{ secrets.APP_CONNECT_NOTARIZATION_USERNAME }} --password ${{ secrets.APP_CONNECT_NOTARIZATION_PASSWORD }} --team-id ${{ secrets.TEAM_IDENTITY }} --wait
          ditto -c -k --keepParent "./build-with-eyetracking/macos/Release/AV Speech in Noise.app" "./build-with-eyetracking/macos/Release/with-eyetracking.zip"
          xcrun notarytool submit "./build-with-eyetracking/macos/Release/with-eyetracking.zip" --apple-id ${{ secrets.APP_CONNECT_NOTARIZATION_USERNAME }} --password ${{ secrets.APP_CONNECT_NOTARIZATION_PASSWORD }} --team-id ${{ secrets.TEAM_IDENTITY }} --wait
      - name: create GitHub release
        run: gh release create $AV_SPEECH_IN_NOISE_VERSION ./build/macos/Release/*.zip "./build-with-eyetracking/macos/Release/with-eyetracking.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
